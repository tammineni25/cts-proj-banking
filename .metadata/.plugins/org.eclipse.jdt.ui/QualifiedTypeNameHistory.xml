<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
    <fullyQualifiedTypeName name="com.org.user.service.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="com.org.user.dto.UserDTO"/>
    <fullyQualifiedTypeName name="com.org.user.model.UserRegistration"/>
    <fullyQualifiedTypeName name="net.bytebuddy.asm.Advice.OffsetMapping.ForOrigin.Renderer.ForReturnTypeName"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="javax.annotation.Generated"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicLong"/>
    <fullyQualifiedTypeName name="java.util.concurrent.ThreadLocalRandom"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="DiscoveryServerApplication"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
    <fullyQualifiedTypeName name="com.org.discovery.DiscoveryServerApplication"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.validation.Errors"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.org.common.model.ServiceReponse"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.org.loan.model.Customer"/>
    <fullyQualifiedTypeName name="com.org.loan.repository.CustomerRepository"/>
    <fullyQualifiedTypeName name="com.org.loan.service.impl.CustomerService"/>
    <fullyQualifiedTypeName name="com.org.loan.model.Loan"/>
    <fullyQualifiedTypeName name="com.org.loan.repository.LoanRepository"/>
    <fullyQualifiedTypeName name="com.org.loan.service.ICustomerService"/>
    <fullyQualifiedTypeName name="com.org.user.service.IUserService"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.config.EnableMongoRepositories"/>
    <fullyQualifiedTypeName name="com.sun.tools.javac.main.Option"/>
    <fullyQualifiedTypeName name="com.sun.tools.javac.util.Options"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.org.user.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.org.user.model.User"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.org.common.model.ServiceResponse"/>
    <fullyQualifiedTypeName name="com.org.common.handlers.ResponseHandlers"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.org.common.exception.BankManagementSystemException"/>
</qualifiedTypeNameHistroy>
